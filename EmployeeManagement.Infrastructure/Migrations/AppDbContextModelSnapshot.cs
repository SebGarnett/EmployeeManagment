// <auto-generated />
using System;
using EmployeeManagement.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagement.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BaseSalary")
                        .HasColumnType("float");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Employee");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EmployeeManagement.Domain.Entities.Consultant", b =>
                {
                    b.HasBaseType("EmployeeManagement.Domain.Entities.Employee");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Consultant");
                });

            modelBuilder.Entity("EmployeeManagement.Domain.Entities.FullTimeEmployee", b =>
                {
                    b.HasBaseType("EmployeeManagement.Domain.Entities.Employee");

                    b.Property<DateTime?>("BeginDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("FullTimeEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
